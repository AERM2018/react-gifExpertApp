{"version":3,"sources":["components/AddCategoria.js","components/GifGridItem.js","helpers/getGif.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","setTimeout","GifGrid","key","GifExpertApp","categorias","ReactDOM","render","document","querySelector"],"mappings":"6MAuCeA,EApCM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEFC,mBAAS,IAFP,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAmBtC,OAEI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YCGjBG,EATK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IACxB,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC4EO,UAAUF,GADtF,sBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAKD,EAAIC,GACThB,MAAQe,EAAIf,MACZC,IAAMc,EAAIE,OAAOC,iBAAiBjB,QATvB,kBAabY,GAba,4CAAH,sDCyBLM,EAtBM,SAACb,GAAe,IAAD,EACNpB,mBAAS,CAC/B0B,KAAO,GACPQ,SAAS,IAHmB,mBACzBC,EADyB,KAClBC,EADkB,KAmBhC,OAbAC,qBAAW,WACPlB,EAAQC,GACPkB,MAAM,SAAAZ,GAAI,OACPa,YAAW,WACPH,EAAS,CACLV,KAAOA,EACPQ,SAAS,MAEd,WAKJC,GCSIK,EA1BC,SAAC,GAAiB,IAAhBpB,EAAe,EAAfA,UAAe,EAQCa,EAAab,GAA/BW,EARiB,EAQtBL,KAAYQ,EARU,EAQVA,QAEnB,OACI,oCACI,4BAAKd,GACJc,GAAW,uBAAGlB,UAAU,qCAAb,eACZ,yBAAKA,UAAU,aACVe,EAAOH,KAAK,SAAAC,GAAG,OAChB,kBAAC,EAAD,eACIY,IAAKZ,EAAIC,IACLD,UCKTa,EAxBM,WAAM,IAAD,EAEc1C,mBAAS,CAAC,gBAFxB,mBAEf2C,EAFe,KAEH5C,EAFG,KAItB,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAcA,cAAkBA,IAChC,6BAEA,4BACK4C,EAAWf,KAAK,SAACpB,GAAD,OACb,kBAAC,EAAD,CACIiC,IAAKjC,EACLY,UAAWZ,UCdnCoC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.6fa5be95.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategoria = ({setCategorias}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue( e.target.value );\r\n      \r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategorias( cat => [inputValue,...cat] )\r\n            setinputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategoria;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async(categoria) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=Esj8Irv3dmowXGtfawNO4YNo2Gvivmfz&q=${encodeURI(categoria)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img  =>{\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images.downsized_medium.url\r\n        }\r\n    });\r\n    // console.log(gifs);\r\n   return gifs\r\n}","import { useState, useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGif';\r\n\r\nconst useFetchGifs = (categoria) => {\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading :true,\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs(categoria)\r\n        .then( data =>\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data : data,\r\n                    loading :false,\r\n                })\r\n            }, 3000)\r\n        );\r\n    });\r\n\r\n   \r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\n\r\nconst GifGrid = ({categoria}) => {\r\n\r\n   \r\n\r\n    // useEffect( ()=>{\r\n    //     getGifs(categoria).then(setImages);\r\n    // },[categoria] );\r\n\r\n    const {data:images,loading} = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h2>{categoria}</h2>\r\n            {loading && <p className='animate__animated animate__shakeX'>Cargando...</p>}\r\n            <div className='card-grid'>\r\n                {images.map( img => \r\n                <GifGridItem \r\n                    key={img.id}\r\n                    {...img}\r\n                />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;\r\n","import React, {useState} from 'react';\r\nimport AddCategoria from './components/AddCategoria';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategoria setCategorias = { setCategorias }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {categorias.map( (cat) =>\r\n                    <GifGrid \r\n                        key={cat}\r\n                        categoria={cat}\r\n                    />\r\n                )} \r\n\r\n            </ol>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}